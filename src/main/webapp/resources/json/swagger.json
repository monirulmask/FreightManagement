{
  "swagger": "2.0",
  "info": {
    "description": "This is API documentation for Tendereasy. This API is developed using Spring MVC and MariaDB (10.2.10-MariaDB)",
    "version": "1.0.0",
    "title": "Freight Management"
  },
  "host": "http://localhost:9090",
  "basePath": "/freightCostCalculation",
  "tags": [
    {
      "name": "Scenario",
      "description": "Get possible route for different scenario. Following tabs contain each route information with required input parameter."
    }
  ],
  "schemes": ["http"],
  "paths": {
    "/scenarioOne": {
      "post": {
        "tags": ["Scenario"],
        "summary": "Return all possible route between source and destination where both source and destination are available in system",
        "description": "Returns a map of status codes to quantities(Click to expand)",
        "operationId": "scenarioOne",
        "produces": ["application/json"],
        "parameters": [{
          "in": "body",
          "name": "body",
          "description": "Search Criteria object",
          "required": true,
          "schema": {"$ref": "#/definitions/SearchCriteriaOne"}
        }],
        "responses": {
          "200": {
            "description": "successful operation with details route if exists"
          },
          "400": {"description": "Validation Error."}
        }
      }
    },
    "/scenarioTwo": {
      "post": {
        "tags": ["Scenario"],
        "summary": "Return all possible route between source and destination where source is available in system but destination is not available. So system will find all location near destination in 50KM radius and all possible path between them.",
        "description": "Returns a map of status codes to quantities(Click to expand)",
        "operationId": "scenarioOne",
        "produces": ["application/json"],
        "parameters": [{
          "in": "body",
          "name": "body",
          "description": "Search Criteria object",
          "required": true,
          "schema": {"$ref": "#/definitions/SearchCriteriaTwo"}
        }],
        "responses": {
          "200": {
            "description": "successful operation with details route if exists"
          },
          "400": {"description": "Validation Error."}
        }
      }
    }
  },
  "definitions": {
    "SearchCriteriaOne": {
      "type": "object",
      "properties": {
        "source": {
          "type": "string"
        },
        "destination": {
          "type": "string"
        },
        "modeOfTransports": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["Ocean","Road","All"]
          }
        },
        "containerSize": {
          "type": "integer",
          "format": "int32"
        },
        "durationFrom": {
          "type": "integer",
          "format": "int32"
        },
        "durationTo": {
          "type": "integer",
          "format": "int32"
        },
        "costFrom": {
          "type": "number",
          "format": "double"
        },
        "costTo": {
          "type": "number",
          "format": "double"
        }
      },
      "xml": {"name": "SearchCriteriaOne"}
    },
    "SearchCriteriaTwo": {
      "type": "object",
      "properties": {
        "source": {
          "type": "string"
        },
        "destination": {
          "type": "string"
        },
        "modeOfTransports": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["Ocean","Road","All"]
          }
        },
        "containerSize": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {"name": "SearchCriteriaTwo"}
    },
    "CustomerResponseMessage": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {"type": "string"},
        "results": {
          "type":"array",
          "items":{
            "type":"object"
          }
        }
      }
    }
  }
}